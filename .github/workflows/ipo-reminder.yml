name: Enterprise IPO Reminder (GitHub-Only)

on:
  schedule:
    # Run daily at 6:00 AM IST (12:30 AM UTC)
    - cron: '30 0 * * *'
  workflow_dispatch:
    inputs:
      execution_mode:
        description: 'Execution mode'
        required: false
        default: 'normal'
        type: choice
        options:
        - normal
        - test
        - verbose
      custom_message:
        description: 'Custom execution message (optional)'
        required: false
        type: string
  push:
    branches: [ main ]
    paths:
      - 'ipo_reminder/**'
      - '.github/workflows/ipo-reminder.yml'

jobs:
  send-enterprise-ipo-reminders:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ipo_reminder
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create logs directory
      run: mkdir -p logs

    - name: Setup database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ipo_reminder
      run: |
        echo "üìä Setting up database..."
        python setup_database.py setup

    - name: Run Enterprise IPO Reminder
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ipo_reminder
        REDIS_URL: redis://localhost:6379/0
        BSE_API_KEY: ${{ secrets.BSE_API_KEY }}
        NSE_API_KEY: ${{ secrets.NSE_API_KEY }}
        ENCRYPTION_KEY: default-encryption-key-32-chars-long
        JWT_SECRET_KEY: default-jwt-secret-key-32-chars-long
        ENTERPRISE_MODE: true
        MONITORING_ENABLED: true
        AUDIT_ENABLED: true
        LOG_LEVEL: ${{ github.event.inputs.execution_mode == 'verbose' && 'DEBUG' || 'INFO' }}
        EXECUTION_MODE: ${{ github.event.inputs.execution_mode || 'normal' }}
        CUSTOM_MESSAGE: ${{ github.event.inputs.custom_message || '' }}
      run: |
        echo "üöÄ ENTERPRISE IPO REMINDER WORKFLOW"
        echo "==================================="
        echo "‚è∞ Execution time:"
        echo "  UTC: $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
        echo "  IST: $(TZ='Asia/Kolkata' date '+%Y-%m-%d %H:%M:%S %Z')"
        echo ""
        echo "üîß System Configuration:"
        echo "  Enterprise Mode: $ENTERPRISE_MODE"
        echo "  Monitoring: $MONITORING_ENABLED"
        echo "  Audit Logging: $AUDIT_ENABLED"
        echo "  Database: PostgreSQL Ready"
        echo "  Cache: Redis Ready"
        echo ""

        # Verify email configuration
        if [ -z "$SENDER_EMAIL" ] || [ -z "$SENDER_PASSWORD" ] || [ -z "$RECIPIENT_EMAIL" ]; then
          echo "‚ùå Email configuration missing!"
          echo "Please set the following GitHub secrets:"
          echo "  - SENDER_EMAIL: Your Gmail address"
          echo "  - SENDER_PASSWORD: Your Gmail app password"
          echo "  - RECIPIENT_EMAIL: Email address to receive IPO reminders"
          exit 1
        fi

        echo "‚úÖ Email configuration verified"
        echo "üìß Sender: $SENDER_EMAIL"
        echo "üìß Recipient: $RECIPIENT_EMAIL"
        echo ""

        # Run enterprise orchestrator
        echo "üè¢ Starting Enterprise IPO Orchestrator..."
        cd /home/runner/work/ipo-reminder/ipo-reminder
        python -m ipo_reminder

        echo ""
        echo "‚úÖ Enterprise IPO Reminder workflow completed!"
        echo "üìß Email sent successfully (if IPOs found)"
        echo "üìä System logs saved to logs/ directory"

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: enterprise-ipo-logs-${{ github.run_number }}
        path: logs/
        retention-days: 30

    - name: Notification on failure
      if: failure()
      run: |
        echo "‚ùå Enterprise IPO Reminder workflow failed!"
        echo "Please check the logs and GitHub Actions output for details."
        echo "Common issues:"
        echo "  - Missing email secrets in GitHub repository"
        echo "  - Database connection issues"
        echo "  - Network connectivity problems with IPO data sources"
